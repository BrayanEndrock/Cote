<!-- /snippets/collection-filter-byob.liquid -->
<style>
    /* The Modal (background) */
    .modal-byob {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        z-index: 30;
    }
    /* Modal Content */
    .modal-content {
        position: relative;
        background-color: #fefefe;
        margin: auto;
        padding: 35px 16px 16px;
        border: 1px solid #888;
        width: 80%;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
        -webkit-animation-name: animatetop;
        -webkit-animation-duration: 0.4s;
        animation-name: animatetop;
        animation-duration: 0.4s
    }
    /* Add Animation */
    @-webkit-keyframes animatetop {
        from {top:-300px; opacity:0} 
        to {top:0; opacity:1}
    }
    @keyframes animatetop {
        from {top:-300px; opacity:0}
        to {top:0; opacity:1}
    }
    /* The Close Button */
    .close {
        color: rgba(180, 187, 195, 0.65);
        font-size: 28px;
        font-weight: bold;
        position: absolute;
        top: 5px;
        right: 10px;
    }
    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }
    .modal-body {
        width: 100%;
        max-height: 75vh;
        overflow: auto;
    }
    .collection-listing .modal-byob .product-detail {
        position: inherit;
        top: inherit;
        left: inherit;
        width: 100%;
        height: inherit;
        margin: 0 auto;
        padding: 0;
    }
    .collection-listing .modal-byob .product-detail .addtocart-btn {
        width: 100%;
        max-width: 150px;
        margin: 10px 0 15px;
    }
</style>
{%- liquid   
	assign products_per_page = section.settings.products_per_page
	assign boost_translations = shop.metafields.boostpfs-settings.labelTranslations
	assign current_locale = request.locale.iso_code
	assign primary_locale = current_locale
	for locale in shop.published_locales
		if locale.primary
			assign primary_locale = locale.iso_code
			break
		endif
	endfor 
	assign label_toolbar_viewas = boost_translations[current_locale].defaultTheme.toolbarViewAs | default:  boost_translations[primary_locale].defaultTheme.toolbarViewAs | escape
	assign label_items_with_count_one = boost_translations[current_locale].defaultTheme.toolbarProduct | default:  boost_translations[primary_locale].defaultTheme.toolbarProduct | escape
	assign label_items_with_count_other = boost_translations[current_locale].defaultTheme.toolbarProducts | default:  boost_translations[primary_locale].defaultTheme.toolbarProducts | escape
	assign label_sale = boost_translations[current_locale].defaultTheme.productItemSale | default:  boost_translations[primary_locale].defaultTheme.productItemSale | escape
	assign label_soldout = boost_translations[current_locale].defaultTheme.productItemSoldOut | default:  boost_translations[primary_locale].defaultTheme.productItemSoldOut | escape
	assign label_from = boost_translations[current_locale].defaultTheme.productItemFrom | default:  boost_translations[primary_locale].defaultTheme.productItemFrom | escape
    assign products_per_row = section.settings.products_per_row
    assign products_per_row_mobile = section.settings.products_per_row_mobile
    assign show_vendor = section.settings.show_vendor
    assign show_price = section.settings.show_price
    assign show_sale_label = section.settings.show_sale_label
    assign show_sold_out_label = section.settings.show_sold_out_label
    assign active_image_swap = section.settings.active_image_swap
    assign show_sorting = section.settings.show_sorting
    assign show_product_review = section.settings.show_product_review
    assign display_item_swatch = section.settings.display_item_swatch
    assign swatch_color_display_type = section.settings.swatch_color_display_type
    assign swatch_color_event_change_image = section.settings.swatch_color_event_change_image
    assign swatches_color_shape = section.settings.swatches_color_shape
    assign equal_height = section.settings.equal_height
    assign ratio_width_height_other = section.settings.ratio_width_height_other
    assign equal_height_crop_image_position = section.settings.equal_height_crop_image_position
    assign show_lable_by_tag = section.settings.show_lable_by_tag
    assign product_item_type = section.settings.product_item_type
-%}
{%- paginate collection.products by products_per_page -%}
    <div class="build-your-kit wrapper" id="build-your-kit-sticky">
        <h1 class="byob-title large--hide medium--hide">{{ collection.title | escape }}</h1>
        <img 
            src="{{ 'icon-close-byob.png' | asset_img_url: '10x' }}" 
            srcset="{{ 'icon-close-byob.png' | asset_img_url: '20x' }} 2x" 
            class="byob-close-icon hide close-icon" 
            alt="icon close"
        >
        <h2 class="title-tab hide text-center">
            View your bundle <i class="fas fa-long-arrow-alt-up"></i>
        </h2>
        <div class="selectorMobile choose-quantity">   
            <span class="copy-top">Choose bundle size</span>
            <div class="five-option quantity-option active" data-option="4">
                <span>4</span><span class="product-size-label"> Products</span>
            </div>
            <div class="eight-option quantity-option" data-option="9">
                <span>9</span><span class="product-size-label"> Products</span>
            </div>    
        </div>
        <div class="selectorMobile choose-products">
            <h1 class="title-tab small--hide">Build your bundle</h1>
            <span class="byob-dynamic-discount">15% Off</span>
            <div class="bundle-icons--wrapper">
                {% for i in (1..9) %}
                    <div class="contain-item-bundle" data-product-variant="" >
                        <img 
                            src="https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374"
                            {%- comment -%}data-srcset="{{ 'empty-byob-icon.png' }} 1x, {{ 'empty-byob-icon.png'}} 2x"{%- endcomment -%}
                            data-srcset="https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374"
                            alt="Build Your Own Bundle" 
                            class="lazyload"   
                        > 
                        <span class="remove">x</span>
                    </div>
                {% endfor %}
                <div class="empty-label">
                    <span>Add products below</span>
                </div>
            </div>
        </div>
        <div class="selectorMobile add-to-cart-actions small--hide">
            <div class="subtotal--wrapper">
                <span>Subtotal</span>
            </div>
            <div class="price-container">
                <del class="before orange">$00.00</del>
                <span class="now orange" data-priceJs="0">$00.00</span>
            </div>
            <span class="btn q cart__checkout disable">
                <span class="cart__checkout--content">
                    Checkout
                    <div class="price-container large--hide medium--hide small--show">
                        <del class="before orange">$00.00</del>
                        <span class="now orange">$00.00</span>
                    </div>
                </span>
                <span class="loader hide">
                    <img src="{{ 'ajax-loader.gif'| asset_url }}" alt="Loader">
                </span>
            </span>   
        </div>

        {%- assign max-progress-bar = 100 -%}
        {%- assign progress-bar-break-one = 5.0 -%}
        {%- assign progress-bar-break-one-fill = 50.0 -%}
        {%- assign discount-one-saving = 2.0 -%}
        {%- assign progress-bar-breaks-one = progress-bar-break-one | times: 100 -%}
        {%- assign progress-bar-break-two = 8.0 -%}
        {%- assign progress-bar-break-two-fill = 100.00 -%}
        {%- assign discount-two-saving = 3.25 -%}
        {%- assign progress-bar-breaks-two = progress-bar-break-two | times: 100 -%}
        {%- assign cart_total_price_collection = 0 -%}
        {%- assign cart_total_price_collection_q = 0 -%}
        {%- assign cart_total_price_collection_one_q = 0 -%}
        {%- assign line_total_price = 0 -%}
        {%- assign subs = false -%}
        {%- assign subs_frequency = "1" -%}

        {%- for line_item in cart.items -%}
            {% if line_item.product.available %}
                {%- for line_item_collection in line_item.product.collections -%}
                    {% if line_item_collection.handle == collection.handle %}
                        {%- assign cart_total_price_collection_q = cart_total_price_collection_q | plus: line_item.quantity -%}
                        {%- assign line_total_price = line_item.original_line_price -%} 
                        {%- assign cart_total_price_collection = cart_total_price_collection | plus: line_total_price -%}
                        {%- assign cart_total_price_collection_one_q = cart_total_price_collection_one_q | plus: line_item.quantity -%}
                    {%- endif -%}
                {%- endfor -%}
            {%- endif -%}
        {%- endfor -%}

        {%- assign fill_total_price = 0 -%}
        {%- assign value_total_price = 0 -%}
        {%- assign total_price_saving = 0 -%}

        {% if cart_total_price_collection_q < progress-bar-break-one %}
            {%- assign value_total_price = cart_total_price_collection_q | times: progress-bar-break-one-fill | divided_by: progress-bar-break-one -%}
            {%- assign fill_total_price = value_total_price -%}
        {% endif %}

        {% if cart_total_price_collection_q >= progress-bar-break-one and cart_total_price_collection_q < progress-bar-break-two %}
            {%- assign value_total_price = cart_total_price_collection_q | minus: progress-bar-break-one -%}
            {%- assign value_total_price2 = progress-bar-break-two | minus: progress-bar-break-one -%}
            {%- assign value_total_price3 = progress-bar-break-two-fill | minus: progress-bar-break-one-fill -%}
            {%- assign value_total_price = value_total_price | times: value_total_price3 | divided_by: value_total_price2 -%}
            {%- assign fill_total_price = value_total_price | plus: progress-bar-break-one-fill -%}
            {%- assign total_price_saving = cart_total_price_collection_q | times: discount-one-saving | times: 100 -%}
            {%- assign total_price_saving = cart_total_price_collection | minus: total_price_saving -%}
        {% endif %}

        {% if cart_total_price_collection_q >= progress-bar-break-two %}
            {%- assign fill_total_price = progress-bar-break-two-fill -%}
            {%- assign total_price_saving = cart_total_price_collection_q | times: discount-two-saving | times: 100 -%}
            {%- assign total_price_saving = cart_total_price_collection | minus: total_price_saving -%}
        {% endif %}
    </div>

    <div class="selectorMobile add-to-cart-actions mobile-actions-container medium--hide large--hide">
        <div class="subtotal-container">
            <div class="subtotal--wrapper">
                <span>Subtotal: </span>
            </div>
            <div class="price-container">
                <del class="before orange hide">$00.00</del>
                <span class="now orange" data-priceJs="0">$00.00</span>
            </div>
        </div>
        <div class="checkout-container">
            <span class="btn q cart__checkout disable">
                <span class="cart__checkout--content">
                    Checkout
                </span>
                <span class="loader hide">
                    <img src="{{ 'ajax-loader.gif'| asset_url }}" alt="Loader">
                </span>
            </span>
        </div>  
    </div>
    
    {%- comment -%} Collection Template {%- endcomment -%}   
    <div class="byob-collection-template-grid" data-section-type="collection-template">
        {% paginate collection.products by 10000 %}
            <div class="container medium-down--hide">  
                <div class="page-header cf">
                    {% if section.settings.coll_desc_pos == 'below' %}
                        <h1 class="majortitle small--hide">{{ collection.title | escape }}</h1>
                    {% endif %}
       
                    {% if collection.description != blank %}
                        <div class="user-content lightly-spaced-row {% if settings.lightbox_imgs %}lightboximages{% endif %}">
                            {{ collection.description }}
                        </div>
                    {% endif %}
       
                    {% if section.settings.coll_desc_pos == 'above' %}
                        <h1 class="majortitle small--hide">{{ collection.title | escape }}</h1>
                    {% endif %}
           
                    {% comment %} Which tags should we show, and group them into categories {% endcomment %}
                    {% assign show_normal_filter = false %}
                    {% assign show_custom_filter_1 = false %}
                    {% assign show_custom_filter_2 = false %}
       
                    {% if section.settings.show_tagfilt_custom1 %}
                        {%- assign custom_tag_arr1 = section.settings.tagfilt_custom1_tags | downcase | replace: ', ',',' | split: ',' -%}
                        {%- capture filter1_html -%}
           
                            {%- for s_tag in custom_tag_arr1 -%}
                                {%- for c_tag in collection.all_tags -%}
                                    {%- assign s_tag_lower = s_tag | downcase -%}
                                    {%- assign c_tag_lower = c_tag | downcase -%}
                            
                                    {%- unless tag contains 'meta-' -%}
                                        {%- if s_tag_lower == c_tag_lower -%}
                                            {%- assign show_custom_filter_1 = true -%}
                                                {%- if current_tags contains c_tag -%}
                                                    <li class="active" data-tag="{{c_tag | handleize}}">{{ c_tag | append: ' <span class="x">&times;</span>' | link_to_remove_tag: c_tag }}</li>
                                                {%- else -%}
                                                    <li data-tag="{{c_tag | handleize}}">{{ c_tag | link_to_add_tag: c_tag }}</li>
                                                {%- endif -%}
                                        {%- endif -%}
                                    {%- endunless -%}
                                {%- endfor -%}
                            {%- endfor -%}
                        {%- endcapture -%}
                    {% endif %}
       
                    {% if section.settings.show_tagfilt_custom2 %}
                        {%- assign custom_tag_arr2 = section.settings.tagfilt_custom2_tags | downcase | replace: ', ',',' | split: ',' -%}
                        {%- capture filter2_html -%}
                            {%- for tag in collection.all_tags -%}
                                {%- unless tag contains 'meta-' -%}
                                    {%- assign tag_lower = tag | downcase -%}
                                    {%- if custom_tag_arr2 contains tag_lower -%}
                                        {%- assign show_custom_filter_2 = true -%}
                                        {%- if current_tags contains tag -%}
                                            <li class="active" data-tag="{{tag | handleize}}">{{ tag | append: ' <span class="x">&times;</span>' | link_to_remove_tag: tag }}</li>
                                        {%- else -%}
                                            <li data-tag="{{tag | handleize}}">{{ tag | link_to_add_tag: tag }}</li>
                                        {%- endif -%}
                                    {%- endif -%}
                                {%- endunless -%}
                            {%- endfor -%}
                        {%- endcapture -%}
                    {% endif %}
       
                    {% if collection.title != "All" %}
                        <div class="filters">
                            {% if section.settings.coll_show_sort %}
                                <span class="sort tags">
                                    <label for="sort-by">{{ 'collections.sorting.title' | t }}</label>
                                    <span class="styled-select styled-select--small">
                                        <select id="sort-by" data-initval="{{ collection.sort_by | default: collection.default_sort_by  }}">
                                            {% if section.settings.coll_show_feat %}
                                                <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
                                            {% endif %}
                                            <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
                                            <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
                                            <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
                                        </select>
                                    </span>
                                </span>
                            {% endif %}
                        </div>
                    {% endif %}
                </div>
            </div>
       
            <!-- TOP COLOR FILTER MENU for ALL COLORS -->
            {% assign excluded_tags = "Non Toxic" | split: "," %}    
            <div class="multi-tag-row hide">
                <div class="tags nav-row cat-custom-1">
                    <ul id="color_menu">      
                        {%- for coll in collections -%}   
                            {% if coll.metafields.global.is_nail_polish == 'true' %}
                                {% assign tag_color = coll.title | replace: "Nail Polish", "" | strip %}
                                {% if excluded_tags contains tag_color %}
                                    {% continue %}
                                {% endif %}
                                <li data-tag="{{ tag_color | downcase }}s" data-order="{{ coll.metafields.global.color_order }}">
                                    <a href="{{ coll.url }}">{{ tag_color }}s</a>
                                </li>
                            {% endif %}
                        {%- endfor -%}
                    </ul>
                </div>
            </div>
            <script>
                jQuery('#color_menu li').sort(function(a, b) { 
                    var x = parseInt(a.getAttribute('data-order'));
                    var y = parseInt(b.getAttribute('data-order'));
                    return x < y ? -1 : 1; 
                }).appendTo('#color_menu');
            </script>
            <!-- END: TOP COLOR FILTER MENU -->
            {% if section.settings.coll_show_tags %}
                {%- capture filter_html -%}
                    {%- for tag in collection.all_tags -%}
                        {%- unless tag contains 'meta-' or custom_tag_arr1 contains tag or custom_tag_arr2 contains tag -%}
                            {%- assign show_normal_filter = true -%}
                            {%- if current_tags contains tag -%}
                                <li class="active" data-tag="{{tag | handleize}}">
                                    {%- comment -%}
                                    {{ tag | append: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM175 208.1L222.1 255.1L175 303C165.7 312.4 165.7 327.6 175 336.1C184.4 346.3 199.6 346.3 208.1 336.1L255.1 289.9L303 336.1C312.4 346.3 327.6 346.3 336.1 336.1C346.3 327.6 346.3 312.4 336.1 303L289.9 255.1L336.1 208.1C346.3 199.6 346.3 184.4 336.1 175C327.6 165.7 312.4 165.7 303 175L255.1 222.1L208.1 175C199.6 165.7 184.4 165.7 175 175C165.7 184.4 165.7 199.6 175 208.1V208.1z"/></svg>' | link_to_remove_tag: tag }}
                                    {%- endcomment -%}
                                    <a title="Remove tag {{ tag }}" href="{{ collection.url }}">{{ tag | append: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM175 208.1L222.1 255.1L175 303C165.7 312.4 165.7 327.6 175 336.1C184.4 346.3 199.6 346.3 208.1 336.1L255.1 289.9L303 336.1C312.4 346.3 327.6 346.3 336.1 336.1C346.3 327.6 346.3 312.4 336.1 303L289.9 255.1L336.1 208.1C346.3 199.6 346.3 184.4 336.1 175C327.6 165.7 312.4 165.7 303 175L255.1 222.1L208.1 175C199.6 165.7 184.4 165.7 175 175C165.7 184.4 165.7 199.6 175 208.1V208.1z"/></svg>' }}</a>
                                </li>
                            {%- else -%}
                                <li data-tag="{{tag | handleize}}">
                                    {%- comment -%}
                                    {{ tag | link_to_add_tag: tag }}
                                    {%- endcomment -%}
                                    <a title="Narrow selection to products matching tag {{ tag }}" href="{{ collection.url | append: '/' | append: tag }}">{{ tag }}</a>
                                </li>
                            {%- endif -%}
                        {%- endunless -%}
                    {%- endfor -%}
                {%- endcapture -%}
            {% endif %}
            {% include 'byob-mobile-dynamic-filter' %}
            <div class="byob-filters--wrapper medium-down--hide">
                <div class="tags nav-row byob-tags">
                    <ul class="byob-color--list">{{ filter_html }}</ul>
                </div>
            </div>
            <div class="byob-wrapper--container">
                <div class="collection-listing{% if section.settings.coll_gridstream_mode == 'stream' %}-stream{% endif %} cf">
                    <div class="product-list byob-product-list">    
                        {% for product in collection.products %}
                            {% include 'byob-product-grid-item' %}          
                        {% endfor %}
                    </div>
                </div>
            </div>
       {% endpaginate %}   
    </div>                 
{%- endpaginate -%}

<script type="text/javascript">
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        let target = event.target.closest(".showmore-btn");
        if (target != null && target.getAttribute('data-modal')) {
            if (document.querySelector('.' + target.getAttribute('data-modal'))) {
                document.querySelector('.' + target.getAttribute('data-modal')).style.display = "block";
            }
            return false;
        }
        target = event.target.closest(".modal-byob .close");
        if (target != null) {
            target.closest('.modal-byob').style.display = "none";
            return false;
        }
        target = event.target;
        if (target.classList.contains("modal-byob")) {
            document.querySelectorAll(".modal-byob").forEach(modal => { modal.style.display = "none" });
            return false;
        }
    }

    let arrayProductsAdd = [];
    let countAdd = 0;

    let url_coupon = false;

    function scriptByob(arrayProductsAdd, countAdd) {

        let toggleByobMobile = document.querySelector(".build-your-kit.wrapper");
        let optionStateMobile = document.querySelectorAll('.selectorMobile');

        document.querySelector(".build-your-kit.wrapper h2.title-tab").addEventListener("click", (e) => {
            toggleByobMobile.classList.toggle("active"); 
            document.querySelector('.close-icon').classList.remove("hide");
            document.querySelector('.close-icon').classList.remove("small--hide");
            for (var i = 0; i < optionStateMobile.length; i++) {
                optionStateMobile[i].classList.toggle("small--hide");
            }
        });

        document.querySelector(".build-your-kit.wrapper .close-icon").addEventListener("click", (e) => {
            toggleByobMobile.classList.toggle("active");
            document.querySelector('.close-icon').classList.toggle('small--hide');
            for (var i = 0; i < optionStateMobile.length; i++) {
                optionStateMobile[i].classList.toggle("small--hide");
            }
        });

        let typeBundle = document.querySelector('.choose-quantity .quantity-option.active span').textContent;

        function bundleQuantity(typeBundle){

            const subtractQuantity = (id) => {
                let total = document.querySelector(`.grid-product[data-first-variant-id="${id}"] input`).getAttribute('data-count-onetime');
                let result = parseInt(total) - 1;
                document.querySelector(`.grid-product[data-first-variant-id="${id}"] input`).setAttribute('data-count-onetime', result);
            }

            let bundleOptionTotal = document.querySelectorAll('.choose-products .contain-item-bundle');

            if (typeBundle == 4) {
                document.querySelector('.selectorMobile.choose-products').classList.add('active-five');
                document.querySelector('.byob-dynamic-discount').innerText = '15% Off';
                url_coupon =  "/discount/BYOB4?redirect=/collections/build-your-own-bundle";
                if (document.querySelector('.selectorMobile.choose-products').classList.contains('active-eight')) {
                    document.querySelector('.selectorMobile.choose-products.active-eight').classList.remove('active-eight');
                }
            } else {
                document.querySelector('.selectorMobile.choose-products').classList.add('active-eight');
                document.querySelector('.byob-dynamic-discount').innerText = '30% Off'; 
                url_coupon = "/discount/BYOB9?redirect=/collections/build-your-own-bundle";
                if (document.querySelector('.selectorMobile.choose-products').classList.contains('active-five')) {
                    document.querySelector('.selectorMobile.choose-products.active-five').classList.remove('active-five');
                }
            }

            for (var i = 0; i < bundleOptionTotal.length; i++) {
                if (i > parseInt(typeBundle) - 1 ) {
                    if (bundleOptionTotal[i].classList.contains('active')) {
                        let id = bundleOptionTotal[i].getAttribute('data-product-variant');
                        subtractQuantity(id);
                    }
                    bundleOptionTotal[i].style.display = 'none';
                    bundleOptionTotal[i].classList.remove('active');
                    bundleOptionTotal[i].removeAttribute('data-product-variant');
                    bundleOptionTotal[i].childNodes[1].setAttribute("src", `https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374`);
                    bundleOptionTotal[i].childNodes[1].setAttribute("srcset", `https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374`);
                } else {
                    bundleOptionTotal[i].style.display = 'block';                
                }
            }

            let totalActiveSelector = document.querySelectorAll('.contain-item-bundle.active');
            let priceNow, priceOld;    

            if (validateAddToCart(document.querySelectorAll('.choose-products .contain-item-bundle.active').length, typeBundle)) {
                let hideBtn = document.querySelectorAll('.addtocart-btn');
                for (var i = 0; i < hideBtn.length; i++) {
                    hideBtn[i].classList.add('hide');
                }                
            } else {
                let hideBtn = document.querySelectorAll('.addtocart-btn');
                for (var i = 0; i < hideBtn.length; i++) {
                    hideBtn[i].classList.remove('hide');
                } 
            }
        }

        function setOptionsLocalStorage() {
            arrayProductsAdd = [];
            let totalProductsAdd = document.querySelectorAll(`.contain-item-bundle.active`);
            for (let i = 0; i < totalProductsAdd.length; i++) {
                let jsonInfo = {};
                jsonInfo['id'] = totalProductsAdd[i].getAttribute('data-product-variant');
                jsonInfo['price'] = totalProductsAdd[i].getAttribute('data-price');
                jsonInfo['img'] = totalProductsAdd[i].childNodes[1].getAttribute('src');
                arrayProductsAdd.push(jsonInfo);
            }
            //console.log('arrayProductsAdd',arrayProductsAdd);
            localStorage.setItem('itemsAdd', JSON.stringify(arrayProductsAdd));
            localStorage.setItem('priceOld', document.querySelector('.price-container .before').textContent);
            localStorage.setItem('priceNow', document.querySelector('.price-container .now').textContent);
            localStorage.setItem('typeBundle', document.querySelector('.choose-quantity .quantity-option.active span').textContent);
        }

        function validateAddToCart(countActive, typeBundle) {
            function enableaAddCart(stateAddToCart) {
                let btnCart = document.querySelector('.add-to-cart-actions .btn.cart__checkout');
                let mobileBtnCart = document.querySelector('.mobile-actions-container .cart__checkout');
                if (stateAddToCart) {
                    btnCart.classList.remove('disable');
                    mobileBtnCart.classList.remove('disable');
                } else {
                    if (!btnCart.classList.contains('disable') || !mobileBtnCart.classList.contains('disable')) {
                        btnCart.classList.add('disable');
                        mobileBtnCart.classList.add('disable');
                    }
                }
            }

            let state;
            if (countActive == typeBundle) {
                state = true;
            } else {
                state = false;
            }
            enableaAddCart(state);

            if (countActive == 0) {
                let hideBtn = document.querySelectorAll('.addtocart-btn');
                let btnRemove = document.querySelectorAll('.deletetocart-btn');
                document.querySelector('.empty-label').style.display = 'block';
                for (var i = 0; i < hideBtn.length; i++) {
                    if (!hideBtn[i].classList.contains('hide')) {
                        hideBtn[i].innerHTML = "Add <svg width='14' height='15' viewBox='0 0 14 15' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M7.00016 0.833313C10.6822 0.833313 13.6668 3.81798 13.6668 7.49998C13.6668 11.182 10.6822 14.1666 7.00016 14.1666C3.31816 14.1666 0.333496 11.182 0.333496 7.49998C0.333496 3.81798 3.31816 0.833313 7.00016 0.833313ZM7.00016 4.16665C6.87934 4.16665 6.7626 4.21041 6.67154 4.28982C6.58048 4.36924 6.52126 4.47894 6.50483 4.59865L6.50016 4.66665V6.99998H4.16683C4.04015 7.00002 3.9182 7.04814 3.82563 7.13463C3.73307 7.22111 3.67678 7.33951 3.66815 7.4659C3.65951 7.59229 3.69917 7.71724 3.77912 7.81551C3.85906 7.91378 3.97333 7.97804 4.09883 7.99531L4.16683 7.99998H6.50016V10.3333C6.5002 10.46 6.54833 10.5819 6.63481 10.6745C6.7213 10.7671 6.83969 10.8234 6.96608 10.832C7.09247 10.8406 7.21742 10.801 7.31569 10.721C7.41397 10.6411 7.47823 10.5268 7.4955 10.4013L7.50016 10.3333V7.99998H9.8335C9.96018 7.99994 10.0821 7.95182 10.1747 7.86533C10.2673 7.77885 10.3235 7.66045 10.3322 7.53406C10.3408 7.40767 10.3012 7.28272 10.2212 7.18445C10.1413 7.08618 10.027 7.02191 9.90149 7.00465L9.8335 6.99998H7.50016V4.66665C7.50016 4.53404 7.44748 4.40686 7.35372 4.31309C7.25995 4.21932 7.13277 4.16665 7.00016 4.16665Z' fill='#3E4B57'/></svg>";
                        btnRemove[i] && btnRemove[i].classList.add('hide');
                    }
                } 
            } else {
                document.querySelector('.empty-label').style.display = 'none';
            }
        }

        validateAddToCart(document.querySelectorAll('.choose-products .contain-item-bundle.active').length, typeBundle);

        function chooseTypeBundle() {
            let element = document.querySelectorAll('.choose-quantity .quantity-option');
            if (element) {
                element.forEach(function(el, key) {
                    el.addEventListener('click', function () {
                        el.classList.toggle("active");
                        element.forEach(function(ell, els) {
                            if (key !== els) {
                                ell.classList.remove('active');
                            }
                            // console.log(els);
                        });
                        typeBundle = document.querySelector('.choose-quantity .quantity-option.active span').textContent;
                        bundleQuantity(typeBundle);
                    });
                });
            }
        }

        chooseTypeBundle();

        bundleQuantity(typeBundle);

        function updatePrice(five = false, eight = false) {

            let actualPrice = Number(jQuery('.price-container .now').text().replace(",", "").replace("$", "")).toLocaleString('en-US', {minimumFractionDigits: 2}),
                actualPriceNoFormat = document.querySelector('.build-your-kit.wrapper .price-container .now'),
                productsActive = document.querySelectorAll('.choose-products .contain-item-bundle.active'),
                valueProduct = 9,
                totalDiscount = 0;

            if (actualPrice == '0.00') {
                actualPrice = 0;
            }

            let price, oldPrice, priceProduct = 0, priceArray = [], totalPlusArray;

            productsActive.forEach(element => {
                priceProduct = element.getAttribute('data-price');
                priceProduct = Number(priceProduct);
                priceArray.push(priceProduct);
            });

            totalPlusArray = priceArray.reduce((a, b) => a + b, 0);

            if (five) {
                totalDiscount = (totalPlusArray / 100) * 15;
                price = totalPlusArray - totalDiscount;
                oldPrice = totalPlusArray;
            } else if (eight) {
                totalDiscount = (totalPlusArray / 100) * 30;
                price = totalPlusArray - totalDiscount;
                oldPrice = totalPlusArray;
            } else {
                price = totalPlusArray;
                oldPrice = price;
            }
        
            actualPriceNoFormat.setAttribute('data-pricejs', price);
	        jQuery('.price-container .now').text('$'+ Number(price).toLocaleString('en-US', {minimumFractionDigits: 2}) );
            jQuery('.price-container .before').text('$'+ Number(oldPrice).toLocaleString('en-US', {minimumFractionDigits: 2}) );
        }

        function addProductsToBar(variantId, imageProduct, myNodeList, productPrice){

            for (var i = 0; i < myNodeList.length; i++) {
                if (myNodeList[i].classList.contains("active")) {
                
                } else {
                    myNodeList[i].setAttribute("data-product-variant", variantId);
                    myNodeList[i].setAttribute("data-price", productPrice);
                    myNodeList[i].classList.add('active');
                    myNodeList[i].childNodes[1].setAttribute("data-srcset", imageProduct);
                    myNodeList[i].childNodes[1].setAttribute("src", imageProduct);
                    myNodeList[i].childNodes[1].setAttribute("srcset", imageProduct);
                    break;
                }
            }
        }

        function validateOptionsActive() {

            let selectorActive = document.querySelectorAll('.contain-item-bundle.active').length;
            let typeBundleSelect = document.querySelector('.choose-quantity .quantity-option.active').getAttribute('data-option');
            if (selectorActive == typeBundleSelect) {
                return true
            } else {
                return false
            }
        }
        
        if (validateOptionsActive()) {
            let hideBtn = document.querySelectorAll('.addtocart-btn');
            for (var i = 0; i < hideBtn.length; i++) {
                hideBtn[i].classList.add('hide');
            }                
        }

        function addToCartProducts() {
            let viewData = {
                items: []
            };
            let slides = $('.contain-item-bundle.active');
            let unit = 1;
            for (let i = 0; i < slides.length; i++) {
                let tempQty = 0;
                let prodId = document.querySelectorAll(`.choose-products [data-product-variant="${slides[i].getAttribute('data-product-variant')}"]`);
                let comp = slides[i].getAttribute('data-product-variant');
                for (let i = 0; i < prodId.length; i++) {
                    if (prodId[i].classList.contains('active')) {
                        tempQty++;
                    }
                }
                let state_add = false;
                for (let e = 0; e < viewData.items.length; e++) {
                    if (viewData.items[e].id == comp ){
                        state_add = true;
                    }    
                }
                if(!state_add){
                    var jsonData = {};
                    jsonData['quantity'] = tempQty * unit ;
                    jsonData['id'] = slides[i].getAttribute('data-product-variant');
                    jsonData['properties'] = {
                        'promotion': 'single'
                    }
                    viewData.items.push(jsonData);
                } 
            }
            //console.log("viewData.items",viewData.items);
            var obj=$(this);
            $.ajax({
                type: "POST",
                url: "/cart/clear.js",
                data: "",
                async: false,
                dataType: "json",
                success: function(t) {
                    console.log('Clean Cart');
                    $.ajax({
                        type: 'POST',
                        url: '/cart/add.js',
                        data: {
                            items : viewData['items']
                        },
                        dataType: 'json', 
                        success: function (data) {
                            $.ajax({
                                type: "GET",
                                url: url_coupon,
                                success: function() {
                                    window.location.href  = "/checkout";
                                    /*goCart.fetchAndOpenCart();*/
                                }      
                            });
                        }
                    });
                }
            });
        }

        document.querySelector(".cart__checkout.btn").addEventListener("click", (e) => {
            document.querySelector('.add-to-cart-actions .cart__checkout .cart__checkout--content').classList.add('hide');
            document.querySelector('.add-to-cart-actions .cart__checkout .loader').classList.remove('hide');
            addToCartProducts();
        });

        document.querySelector(".mobile-actions-container .cart__checkout").addEventListener("click", (e) => {
            document.querySelector('.mobile-actions-container .cart__checkout .cart__checkout--content').classList.add('hide');
            document.querySelector('.mobile-actions-container .cart__checkout .loader').classList.remove('hide');
            addToCartProducts();
        });

        function configProductAfterClick(variantId, minus = false){
            let productsSelectorInput = document.querySelector(`.grid-product input[name='updates--${variantId}']`);console.log('productsSelectorInput',productsSelectorInput);
            let gridProduct = document.querySelector(`.grid-product[data-first-variant-id="${variantId}"]`);
            let count = productsSelectorInput.getAttribute('data-count-onetime');
            if (minus) {
                count = parseInt(count) - 1;
            } else {
                count = parseInt(count) + 1;
            }
            //console.log('count',count);
            productsSelectorInput.setAttribute('data-count-onetime', count );
            let cartCountProduct = document.querySelector(`.grid-product__wrapper .cart-count-product[data-id="${variantId}"]`);
            // cartCountProduct.textContent = count;
            // cartCountProduct.classList.remove('hide');
            let alldelete = gridProduct.querySelectorAll('.deletetocart-btn');
            let allRemove = gridProduct.querySelectorAll('.addtocart-btn');
            if ( count > 0) {
                //console.log('alldelete.length',alldelete.length);
                for (var i = 0; i < alldelete.length; i++) {
                    alldelete[i].classList.remove('hide');
                    allRemove[i].innerHTML = "Add <svg width='14' height='15' viewBox='0 0 14 15' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M7.00016 0.833313C10.6822 0.833313 13.6668 3.81798 13.6668 7.49998C13.6668 11.182 10.6822 14.1666 7.00016 14.1666C3.31816 14.1666 0.333496 11.182 0.333496 7.49998C0.333496 3.81798 3.31816 0.833313 7.00016 0.833313ZM7.00016 4.16665C6.87934 4.16665 6.7626 4.21041 6.67154 4.28982C6.58048 4.36924 6.52126 4.47894 6.50483 4.59865L6.50016 4.66665V6.99998H4.16683C4.04015 7.00002 3.9182 7.04814 3.82563 7.13463C3.73307 7.22111 3.67678 7.33951 3.66815 7.4659C3.65951 7.59229 3.69917 7.71724 3.77912 7.81551C3.85906 7.91378 3.97333 7.97804 4.09883 7.99531L4.16683 7.99998H6.50016V10.3333C6.5002 10.46 6.54833 10.5819 6.63481 10.6745C6.7213 10.7671 6.83969 10.8234 6.96608 10.832C7.09247 10.8406 7.21742 10.801 7.31569 10.721C7.41397 10.6411 7.47823 10.5268 7.4955 10.4013L7.50016 10.3333V7.99998H9.8335C9.96018 7.99994 10.0821 7.95182 10.1747 7.86533C10.2673 7.77885 10.3235 7.66045 10.3322 7.53406C10.3408 7.40767 10.3012 7.28272 10.2212 7.18445C10.1413 7.08618 10.027 7.02191 9.90149 7.00465L9.8335 6.99998H7.50016V4.66665C7.50016 4.53404 7.44748 4.40686 7.35372 4.31309C7.25995 4.21932 7.13277 4.16665 7.00016 4.16665Z' fill='#3E4B57'/></svg>";
                }
            } else {
                gridProduct.querySelector('.deletetocart-btn').classList.add('hide');
                gridProduct.querySelector('.addtocart-btn').textContent = 'Add';
                for (var i = 0; i < alldelete.length; i++) {
                    alldelete[i].classList.add('hide');
                    allRemove[i].innerHTML = "Add <svg width='14' height='15' viewBox='0 0 14 15' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M7.00016 0.833313C10.6822 0.833313 13.6668 3.81798 13.6668 7.49998C13.6668 11.182 10.6822 14.1666 7.00016 14.1666C3.31816 14.1666 0.333496 11.182 0.333496 7.49998C0.333496 3.81798 3.31816 0.833313 7.00016 0.833313ZM7.00016 4.16665C6.87934 4.16665 6.7626 4.21041 6.67154 4.28982C6.58048 4.36924 6.52126 4.47894 6.50483 4.59865L6.50016 4.66665V6.99998H4.16683C4.04015 7.00002 3.9182 7.04814 3.82563 7.13463C3.73307 7.22111 3.67678 7.33951 3.66815 7.4659C3.65951 7.59229 3.69917 7.71724 3.77912 7.81551C3.85906 7.91378 3.97333 7.97804 4.09883 7.99531L4.16683 7.99998H6.50016V10.3333C6.5002 10.46 6.54833 10.5819 6.63481 10.6745C6.7213 10.7671 6.83969 10.8234 6.96608 10.832C7.09247 10.8406 7.21742 10.801 7.31569 10.721C7.41397 10.6411 7.47823 10.5268 7.4955 10.4013L7.50016 10.3333V7.99998H9.8335C9.96018 7.99994 10.0821 7.95182 10.1747 7.86533C10.2673 7.77885 10.3235 7.66045 10.3322 7.53406C10.3408 7.40767 10.3012 7.28272 10.2212 7.18445C10.1413 7.08618 10.027 7.02191 9.90149 7.00465L9.8335 6.99998H7.50016V4.66665C7.50016 4.53404 7.44748 4.40686 7.35372 4.31309C7.25995 4.21932 7.13277 4.16665 7.00016 4.16665Z' fill='#3E4B57'/></svg>";
                }
            }
        }

        function removeProduct(idProduct){
            let elementActive;
            elementActive = document.querySelector(`.contain-item-bundle[data-product-variant='${idProduct}']`);
            elementActive.classList.remove('active');
            elementActive.childNodes[1].setAttribute("src", `https://cdn.shopify.com/s/files/1/0447/4049/files/empty.png?v=1644950097`);
            elementActive.childNodes[1].setAttribute("srcset", `https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374`);
            elementActive.removeAttribute('data-product-variant');
        }

        function functionRemoveFromBar(idElement, targetElement) {

            let elementRemove = document.querySelector(`.contain-item-bundle[data-product-variant="${idElement}"]`),
                elementGrid = document.querySelector(`.grid-product[data-first-variant-id="${idElement}"]`),
                countGridAdd, countFinal;

            targetElement.querySelector('img').setAttribute("src", `https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374`);
            targetElement.querySelector('img').setAttribute("srcset", `https://cdn.shopify.com/s/files/1/0447/4049/files/byob-product-shape.png?v=1648770374`);
            targetElement.classList.remove('active');
            targetElement.removeAttribute('data-product-variant');

            countGridAdd = elementGrid.querySelector('.product_byob_quantity').getAttribute('data-count-onetime');
            countFinal = parseInt(countGridAdd) - 1;
            elementGrid.querySelector('.product_byob_quantity').setAttribute("data-count-onetime", countFinal);

            if (countFinal == 0) {
                let alldelete = elementGrid.querySelectorAll('.deletetocart-btn');
                let allRemove = elementGrid.querySelectorAll('.addtocart-btn');
                for (var i = 0; i < alldelete.length; i++) {
                    alldelete[i].classList.add('hide');
                    allRemove[i].innerHTML = "Add <svg width='14' height='15' viewBox='0 0 14 15' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M7.00016 0.833313C10.6822 0.833313 13.6668 3.81798 13.6668 7.49998C13.6668 11.182 10.6822 14.1666 7.00016 14.1666C3.31816 14.1666 0.333496 11.182 0.333496 7.49998C0.333496 3.81798 3.31816 0.833313 7.00016 0.833313ZM7.00016 4.16665C6.87934 4.16665 6.7626 4.21041 6.67154 4.28982C6.58048 4.36924 6.52126 4.47894 6.50483 4.59865L6.50016 4.66665V6.99998H4.16683C4.04015 7.00002 3.9182 7.04814 3.82563 7.13463C3.73307 7.22111 3.67678 7.33951 3.66815 7.4659C3.65951 7.59229 3.69917 7.71724 3.77912 7.81551C3.85906 7.91378 3.97333 7.97804 4.09883 7.99531L4.16683 7.99998H6.50016V10.3333C6.5002 10.46 6.54833 10.5819 6.63481 10.6745C6.7213 10.7671 6.83969 10.8234 6.96608 10.832C7.09247 10.8406 7.21742 10.801 7.31569 10.721C7.41397 10.6411 7.47823 10.5268 7.4955 10.4013L7.50016 10.3333V7.99998H9.8335C9.96018 7.99994 10.0821 7.95182 10.1747 7.86533C10.2673 7.77885 10.3235 7.66045 10.3322 7.53406C10.3408 7.40767 10.3012 7.28272 10.2212 7.18445C10.1413 7.08618 10.027 7.02191 9.90149 7.00465L9.8335 6.99998H7.50016V4.66665C7.50016 4.53404 7.44748 4.40686 7.35372 4.31309C7.25995 4.21932 7.13277 4.16665 7.00016 4.16665Z' fill='#3E4B57'/></svg>";
                }
            }

            countAdd--;

            validateAddToCart(countAdd, typeBundle);

            let stateAcives = validateOptionsActive();

            if (!stateAcives) {
                let hideBtn = document.querySelectorAll('.addtocart-btn');
                for (var i = 0; i < hideBtn.length; i++) {
                    hideBtn[i].classList.remove('hide');
                }
            }

            let quantityActive = document.querySelectorAll('.contain-item-bundle.active');

            if (quantityActive.length >= 4) {
                let promotionFive = true;
                let promotionEight = false;
                if (quantityActive.length >= 9) {
                    promotionFive = false; promotionEight = true;
                    updatePrice(promotionFive, promotionEight);
                } else {
                    updatePrice(promotionFive);
                }
            } else {
                updatePrice();
            }
            setOptionsLocalStorage();
        }

        document.querySelectorAll('.grid-product .addtocart-btn').forEach(item => {
            item.addEventListener("click", (e) => {

                //console.log(`type bundle ${typeBundle}`);
                let target = e.currentTarget,
                    variantId = target.getAttribute('data-id'),
                    productPrice = target.getAttribute('data-price'),
                    imageProduct = target.getAttribute('data-image-render'),
                    myNodeList = document.querySelectorAll('.choose-products .contain-item-bundle'),
                    productsSelector = document.querySelectorAll('.grid-product');

                // Function to add the selected product to the top bar, where the active bundles are located.
                addProductsToBar(variantId, imageProduct, myNodeList, productPrice);

                configProductAfterClick(variantId);

                countAdd++;

                let stateAcives = validateOptionsActive();

                if (stateAcives) {
                    let hideBtn = document.querySelectorAll('.addtocart-btn');
                    for (var i = 0; i < hideBtn.length; i++) {
                        hideBtn[i].classList.add('hide');
                    }                
                }

                validateAddToCart(document.querySelectorAll('.choose-products .contain-item-bundle.active').length, typeBundle);

                let quantityActive = document.querySelectorAll('.contain-item-bundle.active');

                if (quantityActive.length >= 4 ) {
                    let promotionFive = true;
                    let promotionEight = false;
                    if (quantityActive.length >= 9) {
                        promotionFive = false; promotionEight = true;
                        updatePrice(promotionFive, promotionEight);
                    } else {
                        updatePrice(promotionFive, promotionEight);
                    }
                } else {
                    updatePrice(promotionFive = false, promotionEight = false);
                }

                // set Local Storage
                setOptionsLocalStorage();
                
            });
        });

        document.querySelectorAll('.grid-product__wrapper .deletetocart-btn').forEach(item => {
            item.addEventListener("click", (e) => {

                // console.log('typeBundle',typeBundle);
                let target = e.currentTarget,
                    variantId = target.getAttribute('data-id'),
                    productPrice = target.getAttribute('data-price'),
                    imageProduct = target.getAttribute('data-image-render'),
                    myNodeList = document.querySelectorAll('.choose-products .contain-item-bundle'),
                    productsSelector = document.querySelectorAll('.grid-product');

                removeProduct(variantId);

                let minus = true;

                configProductAfterClick(variantId, minus);

                let quantityActive = document.querySelectorAll('.contain-item-bundle.active');

                countAdd--;

                if (quantityActive.length >= 4 ) {
                    let promotionFive = true;
                    let promotionEight = false;
                    if (quantityActive.length >= 9) {
                        promotionFive = false; promotionEight = true;
                        updatePrice(promotionFive, promotionEight);
                    } else {
                        updatePrice(promotionFive);
                    }
                } else {
                    updatePrice();
                }

                let stateAcives = validateOptionsActive();

                if ( !stateAcives ) {
                    let hideBtn = document.querySelectorAll('.addtocart-btn');
                    for (var i = 0; i < hideBtn.length; i++) {
                        hideBtn[i].classList.remove('hide');
                    }
                }

                validateAddToCart(document.querySelectorAll('.choose-products .contain-item-bundle.active').length, typeBundle);

                setOptionsLocalStorage();

            });
        });
        
        document.addEventListener('click', function (e) {
            let target = e.target.closest(".contain-item-bundle.active .remove");
            if (target) {
                let targetElement = target.parentNode;
                let idElement = target.parentNode.getAttribute('data-product-variant');
                functionRemoveFromBar(idElement,targetElement);
                return false;
            }
        });

        return countAdd;
    }
  
    const getLocalStorage = (countAdd, changeGrid = false) => {

        function countDuplicate(arr, id) {
            let count = 0;
            for (let i = 0; i < arr.length; i++) {
                if (arr[i]['id'] == id) {
                    count++
                }
            }
            return count
        }

        function configProductGrid(id, totalAdd){
            let grid = document.querySelector(`.grid-product[data-first-variant-id="${id}"]`);
            if (grid === null) {
                
            } else {
                let gridBtnAdd = grid.querySelectorAll('.addtocart-btn');
                let gridbtnRemove = grid.querySelectorAll('.deletetocart-btn');

                grid.querySelector('input').setAttribute('data-count-onetime', totalAdd);

                for (let i = 0; i < gridBtnAdd.length; i++) {
                    gridBtnAdd[i].innerHTML = "Add another <svg width='14' height='15' viewBox='0 0 14 15' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M7.00016 0.833313C10.6822 0.833313 13.6668 3.81798 13.6668 7.49998C13.6668 11.182 10.6822 14.1666 7.00016 14.1666C3.31816 14.1666 0.333496 11.182 0.333496 7.49998C0.333496 3.81798 3.31816 0.833313 7.00016 0.833313ZM7.00016 4.16665C6.87934 4.16665 6.7626 4.21041 6.67154 4.28982C6.58048 4.36924 6.52126 4.47894 6.50483 4.59865L6.50016 4.66665V6.99998H4.16683C4.04015 7.00002 3.9182 7.04814 3.82563 7.13463C3.73307 7.22111 3.67678 7.33951 3.66815 7.4659C3.65951 7.59229 3.69917 7.71724 3.77912 7.81551C3.85906 7.91378 3.97333 7.97804 4.09883 7.99531L4.16683 7.99998H6.50016V10.3333C6.5002 10.46 6.54833 10.5819 6.63481 10.6745C6.7213 10.7671 6.83969 10.8234 6.96608 10.832C7.09247 10.8406 7.21742 10.801 7.31569 10.721C7.41397 10.6411 7.47823 10.5268 7.4955 10.4013L7.50016 10.3333V7.99998H9.8335C9.96018 7.99994 10.0821 7.95182 10.1747 7.86533C10.2673 7.77885 10.3235 7.66045 10.3322 7.53406C10.3408 7.40767 10.3012 7.28272 10.2212 7.18445C10.1413 7.08618 10.027 7.02191 9.90149 7.00465L9.8335 6.99998H7.50016V4.66665C7.50016 4.53404 7.44748 4.40686 7.35372 4.31309C7.25995 4.21932 7.13277 4.16665 7.00016 4.16665Z' fill='#3E4B57'/></svg>";
                    gridbtnRemove[i] && gridbtnRemove[i].classList.remove('hide');
                }
            }
        }

        arrayProductsAdd = JSON.parse(localStorage.getItem('itemsAdd'));
        //console.log('arrayProductsAdd',arrayProductsAdd);
          
        if (arrayProductsAdd === null || Object.keys(arrayProductsAdd).length === 0 ) {

        } else {
            let totalArray =  arrayProductsAdd.length,
                containsItemBundle = document.querySelectorAll('.contain-item-bundle'),
                id, image, totalAdd;

            for (let i = 0; i < containsItemBundle.length; i++) {
                if (i < arrayProductsAdd.length) {
                    id = arrayProductsAdd[i]['id'];
                    image = arrayProductsAdd[i]['img'];
                    price = arrayProductsAdd[i]['price'];
                    containsItemBundle[i].classList.add('active');
                    containsItemBundle[i].childNodes[1].setAttribute("src", image);
                    containsItemBundle[i].childNodes[1].setAttribute("data-srcset", image);
                    containsItemBundle[i].childNodes[1].setAttribute("srcset", image);
                    containsItemBundle[i].setAttribute("data-product-variant", id),
                    containsItemBundle[i].setAttribute("data-price", price);

                    totalAdd = countDuplicate(arrayProductsAdd, id);

                    configProductGrid(id, totalAdd);
                } else {
                    containsItemBundle[i].classList.remove('active');
                }
            }

            let priceOld = localStorage.getItem('priceOld'),
                priceNow = localStorage.getItem('priceNow');

            //console.log(`Price old ${priceOld} - Price Now ${priceNow}`);

            document.querySelectorAll('.price-container .before').forEach(item => { item.textContent = priceOld });
            document.querySelectorAll('.price-container .now').forEach(item => { item.textContent = priceNow });

            countAdd = totalArray;

            let bundleType = localStorage.getItem('typeBundle');

            if (bundleType == '5') {
                document.querySelector('.choose-quantity .eight-option').classList.remove('active');
                document.querySelector('.choose-quantity .five-option').classList.add('active');
            }
        }

        return countAdd
    }

    document.addEventListener('DOMContentLoaded', (event) => {
        //getLocalStorage(countAdd);
        countAdd = getLocalStorage(countAdd);
        scriptByob(arrayProductsAdd, countAdd);
    }); 

    // const notifyFunctionGridFilter = () => {

    //     let selectorGrid = document.querySelectorAll('.grid-app.grid-product');

    //     for (let i = 0; i < selectorGrid.length; i++) {
    //         if (selectorGrid[i].querySelector('.addtocart-btn').classList.contains('sold-out')) {
                
    //             let id = selectorGrid[i].getAttribute('data-first-variant-id');
    //             let handle = selectorGrid[i].getAttribute('data-handle');

    //             selectorGrid[i].querySelector('.addtocart-btn').classList.add('hide');

    //             let button = document.createElement('a');
    //             button.classList.add('BIS_trigger', 'btn');
    //             button.setAttribute('data-variant-id', id);

    //             jQuery.getJSON(`https://touchland.com/products/${handle}.js`, function(product) {
    //                 button.setAttribute('data-product-data', JSON.stringify(product));
    //             } ); 

                
    //             button.setAttribute('href', '#');
    //             button.setAttribute('id', 'BIS_trigger');
    //             button.innerHTML = "Notify me when available";

    //             selectorGrid[i].querySelector('.option-contain').appendChild(button);

    //         }
    //     }

    // }
  </script>